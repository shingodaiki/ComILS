<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Navigation" xml:space="preserve">
    <value>导航</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>后退</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>前进</value>
  </data>
  <data name="_CheckUpdates" xml:space="preserve">
    <value>检查更新(_C)</value>
  </data>
  <data name="_Help" xml:space="preserve">
    <value>帮助(_H)</value>
  </data>
  <data name="_File" xml:space="preserve">
    <value>文件(_F)</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="DEBUGDisassemble" xml:space="preserve">
    <value>DEBUG -- 反编译全部</value>
  </data>
  <data name="E_xit" xml:space="preserve">
    <value>退出(_X)</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="_Open" xml:space="preserve">
    <value>打开(_O)...</value>
  </data>
  <data name="OpenFrom_GAC" xml:space="preserve">
    <value>从_GAC中打开......</value>
  </data>
  <data name="Open_List" xml:space="preserve">
    <value>打开列表(_L)</value>
  </data>
  <data name="ReloadAssemblies" xml:space="preserve">
    <value>重新加载全部程序集</value>
  </data>
  <data name="DEBUGDecompile" xml:space="preserve">
    <value>DEBUG  - 全部反编译</value>
  </data>
  <data name="DEBUGDecompile100x" xml:space="preserve">
    <value>DEBUG  - 反编译100x</value>
  </data>
  <data name="GeneratePortable" xml:space="preserve">
    <value>生成可携带PDB</value>
  </data>
  <data name="RefreshCommand_ReloadAssemblies" xml:space="preserve">
    <value>重新加载程序集</value>
  </data>
  <data name="_Reload" xml:space="preserve">
    <value>重新加载(_R)</value>
  </data>
  <data name="_RemoveAssembliesWithLoadErrors" xml:space="preserve">
    <value>移除程序集及其加载错误(_R)</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>移除</value>
  </data>
  <data name="_SaveCode" xml:space="preserve">
    <value>保存代码(_S)</value>
  </data>
  <data name="_ShowDebugSteps" xml:space="preserve">
    <value>显示调试步骤(_S)</value>
  </data>
  <data name="_View" xml:space="preserve">
    <value>视图(_V)</value>
  </data>
  <data name="SortAssembly_listName" xml:space="preserve">
    <value>按名称排列程序集列表(_L)</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>视图</value>
  </data>
  <data name="SortAssemblyListName" xml:space="preserve">
    <value>按名称排列程序集列表</value>
  </data>
  <data name="_CollapseTreeNodes" xml:space="preserve">
    <value>折叠所有树节点(_C)</value>
  </data>
  <data name="CollapseTreeNodes" xml:space="preserve">
    <value>折叠所有树节点</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="ValueString" xml:space="preserve">
    <value>值(为字符串)</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="StringTable" xml:space="preserve">
    <value>字符串表</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="_Resources" xml:space="preserve">
    <value>资源</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>检查...</value>
  </data>
  <data name="CheckUpdates" xml:space="preserve">
    <value>检查更新</value>
  </data>
  <data name="_About" xml:space="preserve">
    <value>关于(_A)</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>加载中...</value>
  </data>
  <data name="References" xml:space="preserve">
    <value>引用</value>
  </data>
  <data name="ILSpyVersion" xml:space="preserve">
    <value>ILSpy版本</value>
  </data>
  <data name="Decompiling" xml:space="preserve">
    <value>正在反编译...</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="Editor" xml:space="preserve">
    <value>编辑器</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="_SearchFor" xml:space="preserve">
    <value>搜索(_S):</value>
  </data>
  <data name="_Remove" xml:space="preserve">
    <value>移除(_R)</value>
  </data>
  <data name="_LoadDependencies" xml:space="preserve">
    <value>加载依赖(_L)</value>
  </data>
  <data name="Dependencies" xml:space="preserve">
    <value>依赖(_L)</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="SearchPane_Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>字体</value>
  </data>
  <data name="OtherOptions" xml:space="preserve">
    <value>其他选项</value>
  </data>
  <data name="ShowLineNumbers" xml:space="preserve">
    <value>显示行号</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Folding" xml:space="preserve">
    <value>折叠</value>
  </data>
  <data name="_AddMainList" xml:space="preserve">
    <value>添加到主列表(_A)</value>
  </data>
  <data name="_OpenContainingFolder" xml:space="preserve">
    <value>打开包含文件夹(_O)</value>
  </data>
  <data name="Shell" xml:space="preserve">
    <value>Shell</value>
  </data>
  <data name="_OpenCommandLineHere" xml:space="preserve">
    <value>在这里打开命令行(_O)</value>
  </data>
  <data name="CopyName" xml:space="preserve">
    <value>复制FQ名称</value>
  </data>
  <data name="CopyErrorMessage" xml:space="preserve">
    <value>复制错误信息</value>
  </data>
</root>